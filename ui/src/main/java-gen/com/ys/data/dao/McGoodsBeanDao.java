package com.ys.data.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.ys.data.bean.McGoodsBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table mcgoods.
*/
public class McGoodsBeanDao extends AbstractDao<McGoodsBean, Long> {

    public static final String TABLENAME = "mcgoods";

    /**
     * Properties of entity McGoodsBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Mg_id = new Property(0, Long.class, "mg_id", true, "MG_ID");
        public final static Property Mc_no = new Property(1, String.class, "mc_no", false, "MC_NO");
        public final static Property Mg_channo = new Property(2, String.class, "mg_channo", false, "MG_CHANNO");
        public final static Property Gd_id = new Property(3, String.class, "gd_id", false, "GD_ID");
        public final static Property Gd_no = new Property(4, String.class, "gd_no", false, "GD_NO");
        public final static Property Gd_type = new Property(5, String.class, "gd_type", false, "GD_TYPE");
        public final static Property Gd_approve_code = new Property(6, String.class, "gd_approve_code", false, "GD_APPROVE_CODE");
        public final static Property Gd_batch_no = new Property(7, String.class, "gd_batch_no", false, "GD_BATCH_NO");
        public final static Property Gd_des_code = new Property(8, String.class, "gd_des_code", false, "GD_DES_CODE");
        public final static Property Gd_mf_date = new Property(9, java.util.Date.class, "gd_mf_date", false, "GD_MF_DATE");
        public final static Property Gd_exp_date = new Property(10, java.util.Date.class, "gd_exp_date", false, "GD_EXP_DATE");
        public final static Property Mg_gvol = new Property(11, Long.class, "mg_gvol", false, "MG_GVOL");
        public final static Property Mg_gnum = new Property(12, Long.class, "mg_gnum", false, "MG_GNUM");
        public final static Property PrePrice = new Property(13, Long.class, "prePrice", false, "PRE_PRICE");
        public final static Property ScorePrice = new Property(14, Long.class, "scorePrice", false, "SCORE_PRICE");
        public final static Property Mg_vip_price = new Property(15, Long.class, "mg_vip_price", false, "MG_VIP_PRICE");
        public final static Property Mg_price = new Property(16, Long.class, "mg_price", false, "MG_PRICE");
        public final static Property ChanStatus = new Property(17, Long.class, "chanStatus", false, "CHAN_STATUS");
        public final static Property Addtime = new Property(18, java.util.Date.class, "addtime", false, "ADDTIME");
        public final static Property Updatetime = new Property(19, java.util.Date.class, "updatetime", false, "UPDATETIME");
    };


    public McGoodsBeanDao(DaoConfig config) {
        super(config);
    }
    
    public McGoodsBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'mcgoods' (" + //
                "'MG_ID' INTEGER PRIMARY KEY ," + // 0: mg_id
                "'MC_NO' TEXT," + // 1: mc_no
                "'MG_CHANNO' TEXT UNIQUE ," + // 2: mg_channo
                "'GD_ID' TEXT," + // 3: gd_id
                "'GD_NO' TEXT," + // 4: gd_no
                "'GD_TYPE' TEXT," + // 5: gd_type
                "'GD_APPROVE_CODE' TEXT," + // 6: gd_approve_code
                "'GD_BATCH_NO' TEXT," + // 7: gd_batch_no
                "'GD_DES_CODE' TEXT," + // 8: gd_des_code
                "'GD_MF_DATE' INTEGER," + // 9: gd_mf_date
                "'GD_EXP_DATE' INTEGER," + // 10: gd_exp_date
                "'MG_GVOL' INTEGER," + // 11: mg_gvol
                "'MG_GNUM' INTEGER," + // 12: mg_gnum
                "'PRE_PRICE' INTEGER," + // 13: prePrice
                "'SCORE_PRICE' INTEGER," + // 14: scorePrice
                "'MG_VIP_PRICE' INTEGER," + // 15: mg_vip_price
                "'MG_PRICE' INTEGER," + // 16: mg_price
                "'CHAN_STATUS' INTEGER," + // 17: chanStatus
                "'ADDTIME' INTEGER," + // 18: addtime
                "'UPDATETIME' INTEGER);"); // 19: updatetime
        // Add Indexes
        db.execSQL("CREATE INDEX " + constraint + "IDX_mcgoods_MG_CHANNO ON mcgoods" +
                " (MG_CHANNO);");
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'mcgoods'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, McGoodsBean entity) {
        stmt.clearBindings();
 
        Long mg_id = entity.getMg_id();
        if (mg_id != null) {
            stmt.bindLong(1, mg_id);
        }
 
        String mc_no = entity.getMc_no();
        if (mc_no != null) {
            stmt.bindString(2, mc_no);
        }
 
        String mg_channo = entity.getMg_channo();
        if (mg_channo != null) {
            stmt.bindString(3, mg_channo);
        }
 
        String gd_id = entity.getGd_id();
        if (gd_id != null) {
            stmt.bindString(4, gd_id);
        }
 
        String gd_no = entity.getGd_no();
        if (gd_no != null) {
            stmt.bindString(5, gd_no);
        }
 
        String gd_type = entity.getGd_type();
        if (gd_type != null) {
            stmt.bindString(6, gd_type);
        }
 
        String gd_approve_code = entity.getGd_approve_code();
        if (gd_approve_code != null) {
            stmt.bindString(7, gd_approve_code);
        }
 
        String gd_batch_no = entity.getGd_batch_no();
        if (gd_batch_no != null) {
            stmt.bindString(8, gd_batch_no);
        }
 
        String gd_des_code = entity.getGd_des_code();
        if (gd_des_code != null) {
            stmt.bindString(9, gd_des_code);
        }
 
        java.util.Date gd_mf_date = entity.getGd_mf_date();
        if (gd_mf_date != null) {
            stmt.bindLong(10, gd_mf_date.getTime());
        }
 
        java.util.Date gd_exp_date = entity.getGd_exp_date();
        if (gd_exp_date != null) {
            stmt.bindLong(11, gd_exp_date.getTime());
        }
 
        Long mg_gvol = entity.getMg_gvol();
        if (mg_gvol != null) {
            stmt.bindLong(12, mg_gvol);
        }
 
        Long mg_gnum = entity.getMg_gnum();
        if (mg_gnum != null) {
            stmt.bindLong(13, mg_gnum);
        }
 
        Long prePrice = entity.getPrePrice();
        if (prePrice != null) {
            stmt.bindLong(14, prePrice);
        }
 
        Long scorePrice = entity.getScorePrice();
        if (scorePrice != null) {
            stmt.bindLong(15, scorePrice);
        }
 
        Long mg_vip_price = entity.getMg_vip_price();
        if (mg_vip_price != null) {
            stmt.bindLong(16, mg_vip_price);
        }
 
        Long mg_price = entity.getMg_price();
        if (mg_price != null) {
            stmt.bindLong(17, mg_price);
        }
 
        Long chanStatus = entity.getChanStatus();
        if (chanStatus != null) {
            stmt.bindLong(18, chanStatus);
        }
 
        java.util.Date addtime = entity.getAddtime();
        if (addtime != null) {
            stmt.bindLong(19, addtime.getTime());
        }
 
        java.util.Date updatetime = entity.getUpdatetime();
        if (updatetime != null) {
            stmt.bindLong(20, updatetime.getTime());
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public McGoodsBean readEntity(Cursor cursor, int offset) {
        McGoodsBean entity = new McGoodsBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // mg_id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // mc_no
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // mg_channo
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // gd_id
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // gd_no
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // gd_type
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // gd_approve_code
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // gd_batch_no
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // gd_des_code
            cursor.isNull(offset + 9) ? null : new java.util.Date(cursor.getLong(offset + 9)), // gd_mf_date
            cursor.isNull(offset + 10) ? null : new java.util.Date(cursor.getLong(offset + 10)), // gd_exp_date
            cursor.isNull(offset + 11) ? null : cursor.getLong(offset + 11), // mg_gvol
            cursor.isNull(offset + 12) ? null : cursor.getLong(offset + 12), // mg_gnum
            cursor.isNull(offset + 13) ? null : cursor.getLong(offset + 13), // prePrice
            cursor.isNull(offset + 14) ? null : cursor.getLong(offset + 14), // scorePrice
            cursor.isNull(offset + 15) ? null : cursor.getLong(offset + 15), // mg_vip_price
            cursor.isNull(offset + 16) ? null : cursor.getLong(offset + 16), // mg_price
            cursor.isNull(offset + 17) ? null : cursor.getLong(offset + 17), // chanStatus
            cursor.isNull(offset + 18) ? null : new java.util.Date(cursor.getLong(offset + 18)), // addtime
            cursor.isNull(offset + 19) ? null : new java.util.Date(cursor.getLong(offset + 19)) // updatetime
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, McGoodsBean entity, int offset) {
        entity.setMg_id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setMc_no(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setMg_channo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGd_id(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setGd_no(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setGd_type(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setGd_approve_code(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setGd_batch_no(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setGd_des_code(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setGd_mf_date(cursor.isNull(offset + 9) ? null : new java.util.Date(cursor.getLong(offset + 9)));
        entity.setGd_exp_date(cursor.isNull(offset + 10) ? null : new java.util.Date(cursor.getLong(offset + 10)));
        entity.setMg_gvol(cursor.isNull(offset + 11) ? null : cursor.getLong(offset + 11));
        entity.setMg_gnum(cursor.isNull(offset + 12) ? null : cursor.getLong(offset + 12));
        entity.setPrePrice(cursor.isNull(offset + 13) ? null : cursor.getLong(offset + 13));
        entity.setScorePrice(cursor.isNull(offset + 14) ? null : cursor.getLong(offset + 14));
        entity.setMg_vip_price(cursor.isNull(offset + 15) ? null : cursor.getLong(offset + 15));
        entity.setMg_price(cursor.isNull(offset + 16) ? null : cursor.getLong(offset + 16));
        entity.setChanStatus(cursor.isNull(offset + 17) ? null : cursor.getLong(offset + 17));
        entity.setAddtime(cursor.isNull(offset + 18) ? null : new java.util.Date(cursor.getLong(offset + 18)));
        entity.setUpdatetime(cursor.isNull(offset + 19) ? null : new java.util.Date(cursor.getLong(offset + 19)));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(McGoodsBean entity, long rowId) {
        entity.setMg_id(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(McGoodsBean entity) {
        if(entity != null) {
            return entity.getMg_id();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
