package com.ys.data.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.ys.data.bean.AdvBean;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table adv.
*/
public class AdvBeanDao extends AbstractDao<AdvBean, String> {

    public static final String TABLENAME = "adv";

    /**
     * Properties of entity AdvBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Ai_id = new Property(0, String.class, "ai_id", true, "AI_ID");
        public final static Property Ai_file_id = new Property(1, String.class, "ai_file_id", false, "AI_FILE_ID");
        public final static Property Ai_file_name = new Property(2, String.class, "ai_file_name", false, "AI_FILE_NAME");
        public final static Property Ai_type = new Property(3, String.class, "ai_type", false, "AI_TYPE");
        public final static Property Ai_gd_no = new Property(4, String.class, "ai_gd_no", false, "AI_GD_NO");
    };


    public AdvBeanDao(DaoConfig config) {
        super(config);
    }
    
    public AdvBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'adv' (" + //
                "'AI_ID' TEXT PRIMARY KEY NOT NULL ," + // 0: ai_id
                "'AI_FILE_ID' TEXT," + // 1: ai_file_id
                "'AI_FILE_NAME' TEXT," + // 2: ai_file_name
                "'AI_TYPE' TEXT," + // 3: ai_type
                "'AI_GD_NO' TEXT);"); // 4: ai_gd_no
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'adv'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, AdvBean entity) {
        stmt.clearBindings();
 
        String ai_id = entity.getAi_id();
        if (ai_id != null) {
            stmt.bindString(1, ai_id);
        }
 
        String ai_file_id = entity.getAi_file_id();
        if (ai_file_id != null) {
            stmt.bindString(2, ai_file_id);
        }
 
        String ai_file_name = entity.getAi_file_name();
        if (ai_file_name != null) {
            stmt.bindString(3, ai_file_name);
        }
 
        String ai_type = entity.getAi_type();
        if (ai_type != null) {
            stmt.bindString(4, ai_type);
        }
 
        String ai_gd_no = entity.getAi_gd_no();
        if (ai_gd_no != null) {
            stmt.bindString(5, ai_gd_no);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public AdvBean readEntity(Cursor cursor, int offset) {
        AdvBean entity = new AdvBean( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // ai_id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // ai_file_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // ai_file_name
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // ai_type
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // ai_gd_no
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, AdvBean entity, int offset) {
        entity.setAi_id(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setAi_file_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setAi_file_name(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setAi_type(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAi_gd_no(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(AdvBean entity, long rowId) {
        return entity.getAi_id();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(AdvBean entity) {
        if(entity != null) {
            return entity.getAi_id();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
